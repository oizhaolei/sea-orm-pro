# Loco configuration file documentation

# Application logging configuration
logger:
  # Enable or disable logging.
  enable: true
  # Enable pretty backtrace (sets RUST_BACKTRACE=1)
  pretty_backtrace: true
  # Log level, options: trace, debug, info, warn or error.
  level: debug
  # Define the logging format. options: compact, pretty or Json
  format: compact
  # By default the logger has filtering only logs that came from your code or logs that came from `loco` framework. to see all third party libraries
  # Uncomment the line below to override to see all third party libraries you can enable this config and override the logger filters.
  # override_filter: trace

# Web server configuration
server:
  # Port on which the server will listen. the server binding is 0.0.0.0:{PORT}
  port: 8086
  # The UI hostname or IP address that mailers will point to.
  host: http://localhost
  # Out of the box middleware configuration. to disable middleware you can changed the `enable` field to `false` of comment the middleware block
  middlewares:
    # Enable Etag cache header middleware
    etag:
      enable: true
    # Allows to limit the payload size request. payload that bigger than this file will blocked the request.
    limit_payload:
      # Enable/Disable the middleware.
      enable: true
      # the limit size. can be b,kb,kib,mb,mib,gb,gib
      body_limit: 1024mb
    # Generating a unique request ID and enhancing logging with additional information such as the start and completion of request processing, latency, status code, and other request details.
    logger:
      # Enable/Disable the middleware.
      enable: true
    # when your code is panicked, the request still returns 500 status code.
    catch_panic:
      # Enable/Disable the middleware.
      enable: true
    # Timeout for incoming requests middleware. requests that take more time from the configuration will cute and 408 status code will returned.
    timeout_request:
      # Enable/Disable the middleware.
      enable: false
      # Duration time in milliseconds.
      timeout: 5000
    cors:
      enable: true
      # Set the value of the [`Access-Control-Allow-Origin`][mdn] header
      allow_origins:
        - http://localhost:8085
      # Set the value of the [`Access-Control-Allow-Headers`][mdn] header
      allow_headers:
        - Content-Type
        - Authorization
        - "*"
      # Set the value of the [`Access-Control-Allow-Methods`][mdn] header
      allow_methods:
        - GET
        - POST
        - PUT
        - PATCH
        - DELETE
        - HEAD
        - OPTIONS
      # Set the value of the [`Access-Control-Max-Age`][mdn] header in seconds
      max_age: 86400
    fallback:
      enable: false
    static:
      enable: true
      must_exist: true
      precompressed: true
      folder:
        uri: /
        path: assets
      fallback: assets/admin/index.html

# Worker Configuration
workers:
  # specifies the worker mode. Options:
  #   - BackgroundQueue - Workers operate asynchronously in the background, processing queued.
  #   - ForegroundBlocking - Workers operate in the foreground and block until tasks are completed.
  #   - BackgroundAsync - Workers operate asynchronously in the background, processing tasks with async capabilities.
  mode: BackgroundAsync

# Database Configuration
database:
  # Database connection URI
  uri: {{ get_env(name="DATABASE_URL") }}
  # When enabled, the sql query will be logged.
  enable_logging: true
  # Set the timeout duration when acquiring a connection.
  connect_timeout: 30000
  # Set the idle duration before closing a connection.
  idle_timeout: 30000
  # Minimum number of connections for a pool.
  min_connections: 5
  # Maximum number of connections for a pool.
  max_connections: 50
  # Run migration up when application loaded
  auto_migrate: true
  # Truncate database when application loaded. This is a dangerous operation, make sure that you using this flag only on dev environments or test mode
  dangerously_truncate: false
  # Recreating schema when application loaded.  This is a dangerous operation, make sure that you using this flag only on dev environments or test mode
  dangerously_recreate: false

# Authentication Configuration
auth:
  # JWT authentication
  jwt:
    # Secret key for token generation and verification
    secret: pByQUgg4GmXKAqQQvAGo
    # Token expiration time in seconds
    expiration: 604800 # 7 days
# config/*.yaml
#...
initializers:
  openapi:
    redoc:
      url: /redoc
      # spec_json_url: /redoc/openapi.json
      # spec_yaml_url: /redoc/openapi.yaml
    scalar:
      url: /scalar
      # spec_json_url: /scalar/openapi.json
      # spec_yaml_url: /scalar/openapi.yaml
    swagger:
      url: /swagger
      spec_json_url: /api-docs/openapi.json # spec_json_url is required for swagger-ui
      # spec_yaml_url: /api-docs/openapi.yaml
